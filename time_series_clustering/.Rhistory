else if (clust_data$KOSPI[i-1] == 1 & clust_data$KOSDAQ[i-1] == 0 & clust_data$USD[i-1] == 0){
wt[1] <- 0.475
wt[2] <- 0.425
wt[3] <- 0.1
}
else if (clust_data$KOSPI[i-1] == 0 & clust_data$KOSDAQ[i-1] == 0 & clust_data$USD[i-1] == 1){
wt[1] <- 0.45
wt[2] <- 0.45
wt[3] <- 0.1
}
else if (clust_data$KOSPI[i-1] == 0 & clust_data$KOSDAQ[i-1] == 1 & clust_data$USD[i-1] == 0){
wt[1] <- 0.425
wt[2] <- 0.475
wt[3] <- 0.1
}
else if (clust_data$KOSPI[i-1] == 0 & clust_data$KOSDAQ[i-1] == 0 & clust_data$USD[i-1] == 0){
wt[1] <- 0.425
wt[2] <- 0.425
wt[3] <- 0.15
}
wts[[i-1]] = xts(t(wt), order.by = index(rets[ep[i]]))
}
wts = list()
for (i in 2:length(ep)){
wt <- rep(0,3)
if (clust_data$KOSPI[i-1] == 1 & clust_data$KOSDAQ[i-1] == 1 & clust_data$USD[i-1] == 1){
wt[1] <- 0.5
wt[2] <- 0.5
wt[3] <- 0.0
}
else if (clust_data$KOSPI[i-1] == 1 & clust_data$KOSDAQ[i-1] == 1 & clust_data$USD[i-1] == 0){
wt[1] <- 0.475
wt[2] <- 0.475
wt[3] <- 0.05
}
else if (clust_data$KOSPI[i-1] == 1 & clust_data$KOSDAQ[i-1] == 0 & clust_data$USD[i-1] == 1){
wt[1] <- 0.5
wt[2] <- 0.45
wt[3] <- 0.05
}
else if (clust_data$KOSPI[i-1] == 0 & clust_data$KOSDAQ[i-1] == 1 & clust_data$USD[i-1] == 1){
wt[1] <- 0.45
wt[2] <- 0.5
wt[3] <- 0.05
}
else if (clust_data$KOSPI[i-1] == 1 & clust_data$KOSDAQ[i-1] == 0 & clust_data$USD[i-1] == 0){
wt[1] <- 0.475
wt[2] <- 0.425
wt[3] <- 0.1
}
else if (clust_data$KOSPI[i-1] == 0 & clust_data$KOSDAQ[i-1] == 0 & clust_data$USD[i-1] == 1){
wt[1] <- 0.45
wt[2] <- 0.45
wt[3] <- 0.1
}
else if (clust_data$KOSPI[i-1] == 0 & clust_data$KOSDAQ[i-1] == 1 & clust_data$USD[i-1] == 0){
wt[1] <- 0.425
wt[2] <- 0.475
wt[3] <- 0.1
}
else if (clust_data$KOSPI[i-1] == 0 & clust_data$KOSDAQ[i-1] == 0 & clust_data$USD[i-1] == 0){
wt[1] <- 0.425
wt[2] <- 0.425
wt[3] <- 0.15
}
wts[[i-1]] = xts(t(wt), order.by = index(rets[ep[i]]))
}
wts[1]
length(clust_data$Date)
wts = do.call(rbind, wts)
wts[,1] + wts[,2] + wts[,3] == 1
sum(wts[,1] + wts[,2] + wts[,3] != 1)
Tactical = Return.portfolio(R = rets,weights = wts, verbose = T)
tail(Tactical$EOP.Value)
krw
Tactical = Return.portfolio(R = rets,weights = wts)
tail(Tactical$EOP.Value)
tail(Tactical)
Tactical$portfolio.returns
tail(Tactical$portfolio.returns)
head(Tactical$portfolio.returns)
wts
ep[1]
wts = list()
for (i in 1:length(ep)){
wt <- rep(0,3)
if (clust_data$KOSPI[i-1] == 1 & clust_data$KOSDAQ[i-1] == 1 & clust_data$USD[i-1] == 1){
wt[1] <- 0.5
wt[2] <- 0.5
wt[3] <- 0.0
}
else if (clust_data$KOSPI[i-1] == 1 & clust_data$KOSDAQ[i-1] == 1 & clust_data$USD[i-1] == 0){
wt[1] <- 0.475
wt[2] <- 0.475
wt[3] <- 0.05
}
else if (clust_data$KOSPI[i-1] == 1 & clust_data$KOSDAQ[i-1] == 0 & clust_data$USD[i-1] == 1){
wt[1] <- 0.5
wt[2] <- 0.45
wt[3] <- 0.05
}
else if (clust_data$KOSPI[i-1] == 0 & clust_data$KOSDAQ[i-1] == 1 & clust_data$USD[i-1] == 1){
wt[1] <- 0.45
wt[2] <- 0.5
wt[3] <- 0.05
}
else if (clust_data$KOSPI[i-1] == 1 & clust_data$KOSDAQ[i-1] == 0 & clust_data$USD[i-1] == 0){
wt[1] <- 0.475
wt[2] <- 0.425
wt[3] <- 0.1
}
else if (clust_data$KOSPI[i-1] == 0 & clust_data$KOSDAQ[i-1] == 0 & clust_data$USD[i-1] == 1){
wt[1] <- 0.45
wt[2] <- 0.45
wt[3] <- 0.1
}
else if (clust_data$KOSPI[i-1] == 0 & clust_data$KOSDAQ[i-1] == 1 & clust_data$USD[i-1] == 0){
wt[1] <- 0.425
wt[2] <- 0.475
wt[3] <- 0.1
}
else if (clust_data$KOSPI[i-1] == 0 & clust_data$KOSDAQ[i-1] == 0 & clust_data$USD[i-1] == 0){
wt[1] <- 0.425
wt[2] <- 0.425
wt[3] <- 0.15
}
wts[[i-1]] = xts(t(wt), order.by = index(rets[ep[i]]))
}
rets[ep[i+1]
rets[ep[i+1]]
rets[ep[i+1]]
wts = list()
for (i in 1:length(ep)){
wt <- rep(0,3)
if (clust_data$KOSPI[i] == 1 & clust_data$KOSDAQ[i] == 1 & clust_data$USD[i] == 1){
wt[1] <- 0.5
wt[2] <- 0.5
wt[3] <- 0.0
}
else if (clust_data$KOSPI[i] == 1 & clust_data$KOSDAQ[i] == 1 & clust_data$USD[i] == 0){
wt[1] <- 0.475
wt[2] <- 0.475
wt[3] <- 0.05
}
else if (clust_data$KOSPI[i] == 1 & clust_data$KOSDAQ[i] == 0 & clust_data$USD[i] == 1){
wt[1] <- 0.5
wt[2] <- 0.45
wt[3] <- 0.05
}
else if (clust_data$KOSPI[i] == 0 & clust_data$KOSDAQ[i] == 1 & clust_data$USD[i] == 1){
wt[1] <- 0.45
wt[2] <- 0.5
wt[3] <- 0.05
}
else if (clust_data$KOSPI[i] == 1 & clust_data$KOSDAQ[i] == 0 & clust_data$USD[i] == 0){
wt[1] <- 0.475
wt[2] <- 0.425
wt[3] <- 0.1
}
else if (clust_data$KOSPI[i] == 0 & clust_data$KOSDAQ[i] == 0 & clust_data$USD[i] == 1){
wt[1] <- 0.45
wt[2] <- 0.45
wt[3] <- 0.1
}
else if (clust_data$KOSPI[i] == 0 & clust_data$KOSDAQ[i] == 1 & clust_data$USD[i] == 0){
wt[1] <- 0.425
wt[2] <- 0.475
wt[3] <- 0.1
}
else if (clust_data$KOSPI[i] == 0 & clust_data$KOSDAQ[i] == 0 & clust_data$USD[i] == 0){
wt[1] <- 0.425
wt[2] <- 0.425
wt[3] <- 0.15
}
wts[[i]] = xts(t(wt), order.by = index(rets[ep[i+1]]))
}
wts[1]
wts
wts = do.call(rbind, wts)
wts
rets
tail(rets)
prices <- na.locf(cbind(ksp, ksdq, krw)) %>%
setNames(c('KOSPI', 'KOSDAQ', 'KRW'))
idx <- index(prices)%in%index(ksp)
prices <- prices[idx]
idx <- index(prices) < "2021-03-01"
prices <- prices[idx]
rets = na.omit(Return.calculate(prices))
tail(rets)
wts
Tactical = Return.portfolio(R = rets,weights = wts, verbose = T)
Tactical
tail(rets)
tail(Tactical$EOP.Value)
tail(is.na(Tactical$BOP.Weight))
charts.PerformanceSummary(portfolios,
main = "Buy & Hold vs Tactical")
charts.PerformanceSummary(portfolios,
main = "Buy & Hold vs Tactical")
tail(portfolios)
portfolios = cbind(rets[,1],rets[,2]) %>%
setNames(c('매수 후 보유', '국면분석 전략'))
portfolios = na.omit(cbind(rets[,1], Tactical$returns)) %>%
setNames(c('매수 후 보유', '국면분석 전략'))
tail(Tactical, 10)
turnover = xts(rowSums(abs(Tactical$BOP.Weight -
timeSeries::lag(Tactical$EOP.Weight)),
na.rm = TRUE),
order.by = index(Tactical$BOP.Weight))
chart.TimeSeries(turnover)
portfolios = cbind(rets[,1],rets[,2]) %>%
setNames(c('매수 후 보유', '국면분석 전략'))
tail(portfolios)
tail(Tactical, 10)
par(family = 'AppleGothic')
tail(portfolios)
charts.PerformanceSummary(portfolios,
main = "Buy & Hold vs Tactical")
rets
rets_ex1 <- rets[,c(1, 3)]
rets_ex1
ep = endpoints(rets_ex1, on = 'months')
wts = list()
lookback = 10
for (i in (lookback+1) : length(ep)) {
sub_price = prices[ep[i-lookback] : ep[i] , 1]
sma = mean(sub_price)
wt = rep(0, 2)
wt[1] = ifelse(last(sub_price) > sma, 1, 0)
wt[2] = 1 - wt[1]
wts[[i]] = xts(t(wt), order.by = index(rets_ex1[ep[i]]))
}
wts = do.call(rbind, wts)
Tactical = Return.portfolio(rets, wts, verbose = TRUE)
portfolios = na.omit(cbind(rets[,1], Tactical$returns)) %>%
setNames(c('매수 후 보유', '시점 선택 전략'))
head(Tactical, 10)
par(family = 'AppleGothic')
charts.PerformanceSummary(portfolios,
main = "Buy & Hold vs Tactical")
rets[ep[2]]
ep = endpoints(rets, on = 'months')
head(rets)
tail(rets)
wts = list()
for (i in 2:length(ep)) {
#sub_price = prices[ep[i-lookback] : ep[i] , 1]
#sma = mean(sub_price)
wt = rep(0, 3)
wt[1] <- ifelse(clust_data$KOSPI[i-1] > 0, 0.5, 0.45)
#wt[1] = ifelse(last(sub_price) > sma, 1, 0)
wt[2] <- ifelse(clust_data$KOSDAQ[i-1] > 0, 0.5, 0.45)
if (clust_data$USD[i-1] < 1){
wt[1] = wt[1] - 0.025
wt[2] = wt[2] - 0.025
}
#wt[2] = 1 - wt[1]
wt[3] = 1 - wt[1] - wt[2]
wts[[i-1]] = xts(t(wt), order.by = index(rets[ep[i]]))
}
wts = list()
for (i in 1:length(ep)){
wt <- rep(0,3)
if (clust_data$KOSPI[i] == 1 & clust_data$KOSDAQ[i] == 1 & clust_data$USD[i] == 1){
wt[1] <- 0.5
wt[2] <- 0.5
wt[3] <- 0.0
}
else if (clust_data$KOSPI[i] == 1 & clust_data$KOSDAQ[i] == 1 & clust_data$USD[i] == 0){
wt[1] <- 0.475
wt[2] <- 0.475
wt[3] <- 0.05
}
else if (clust_data$KOSPI[i] == 1 & clust_data$KOSDAQ[i] == 0 & clust_data$USD[i] == 1){
wt[1] <- 0.5
wt[2] <- 0.45
wt[3] <- 0.05
}
else if (clust_data$KOSPI[i] == 0 & clust_data$KOSDAQ[i] == 1 & clust_data$USD[i] == 1){
wt[1] <- 0.45
wt[2] <- 0.5
wt[3] <- 0.05
}
else if (clust_data$KOSPI[i] == 1 & clust_data$KOSDAQ[i] == 0 & clust_data$USD[i] == 0){
wt[1] <- 0.475
wt[2] <- 0.425
wt[3] <- 0.1
}
else if (clust_data$KOSPI[i] == 0 & clust_data$KOSDAQ[i] == 0 & clust_data$USD[i] == 1){
wt[1] <- 0.45
wt[2] <- 0.45
wt[3] <- 0.1
}
else if (clust_data$KOSPI[i] == 0 & clust_data$KOSDAQ[i] == 1 & clust_data$USD[i] == 0){
wt[1] <- 0.425
wt[2] <- 0.475
wt[3] <- 0.1
}
else if (clust_data$KOSPI[i] == 0 & clust_data$KOSDAQ[i] == 0 & clust_data$USD[i] == 0){
wt[1] <- 0.425
wt[2] <- 0.425
wt[3] <- 0.15
}
wts[[i]] = xts(t(wt), order.by = index(rets[ep[i+1]]))
}
length(clust_data$Date)
wts = do.call(rbind, wts)
length(wts)
length(index(wts))
wts
length(index(wts))
tail(rets)
sum(is.na(rets))
tail(wts)
sum(wts[,1] + wts[,2] + wts[,3] != 1)
length(ep)
as.Date(index(wts[,1] + wts[,2] + wts[,3]!=1)[1])+1
Tactical = Return.portfolio(R = rets,weights = wts, verbose = T)
#Tactical = Return.portfolio(R = rets,weights = wts)
head(wts)
head(Tactical$EOP.Value)
tail(Tactical$EOP.Value)
portfolios = na.omit(cbind(rets[,1], Tactical$returns)) %>%
setNames(c('매수 후 보유', '국면분석 전략'))
Tactical$returns
tail(Tactical$returns)
Tactical$returns[-1]
tail(Tactical$returns[-1])
tail(Tactical$returns[length(Tactical$returns)])
tail(Tactical$returns[-length(Tactical$returns)])
Tactical$return <- tail(Tactical$returns[-length(Tactical$returns)])
tail(Tactical$EOP.Value)
Tactical$return <- Tactical$returns[-length(Tactical$returns)]
Tactical
Tactical$return
tail(Tactical$EOP.Value)
tail(Tactical$returns)
tail(Tactical$return)
Tactical$returns <- Tactical$returns[-length(Tactical$returns)]
tail(Tactical$returns)
portfolios = na.omit(cbind(rets[,1], Tactical$returns)) %>%
setNames(c('매수 후 보유', '국면분석 전략'))
charts.PerformanceSummary(portfolios,
main = "Buy & Hold vs Tactical")
charts.PerformanceSummary(portfolios,
main = "KOSPI vs Portfolio")
turnover = xts(rowSums(abs(Tactical$BOP.Weight -
timeSeries::lag(Tactical$EOP.Weight)),
na.rm = TRUE),
order.by = index(Tactical$BOP.Weight))
chart.TimeSeries(turnover)
ksp
plot(ksp)
# 각 군집 그래프
plot(usd_pc, type = "sc", clus = 1L)
# 군집 별 센트로이드 그래프(중위)
plot(usd_pc, type = "centroids", clus = 1L)
plot(usd_pc, type = "centroids", clus = 2L)
plot(usd_pc, type = "centroids", clus = 3L)
usd_clust
ksp_part_now
ksp_part_now
ksp_part_now[[1]]
names(ksp_part_now[[1]])
ksp_part_now[[1]]
ksp_part_now[1]
plot(ts(ksp_part_now[1], start = 1))
ts(ksp_part_now[1], start = 1)
ts(ksp_part_now[1]$`2011-04`, start = 1)
plot(ts(ksp_part_now[1]$`2011-04`, start = 1))
plot(ts(ksp_part_now[1]$`2011-04`, start = 1))
charts.PerformanceSummary(portfolios,
main = "KOSPI vs Portfolio")
portfolios = na.omit(cbind(rets[,1], Tactical$returns)) %>%
setNames(c('코스피', '시점 선택 전략'))
charts.PerformanceSummary(portfolios,
main = "Buy & Hold vs Tactical")
portfolios = na.omit(cbind(rets[,1], Tactical$returns)) %>%
setNames(c('코스피', '국면분석 전략'))
charts.PerformanceSummary(portfolios,
main = "KOSPI vs Portfolio")
# 시계열 데이터 변환
library(fpp2)
data <- AirPassengers
plot(data)
diff_data <- diff(data)
plot(diff_data)
log_data <- log(data)
plot(log_data)
diff_log_data <- diff(log_data)
plot(diff_log_data)
ggtsdisplay(diff_log_data)
## 5/11 ----
ggsdisplay(goog200)
## 5/11 ----
ggtsdisplay(goog200)
ggtsdisplay(diff(goog200))
# 백색잡음
set.seed(12)
y <- ts(rnorm(50))
autoplot(y) + ggtitle("White noise")
ggtsdisplay(y)
ggPacf(y) #: 편자기상관함수
ggAcf(y) #: 자기상관함수
ggtsdisplay(y)
# 랜덤워크 모형
x <- rnorm(300)
w <- x
for(t in 2:300){
x[t] = x[t-1]+ w[t]
}
x.ts <- ts(x)
ggtsdisplay(x.ts)
## 5/11 ----
# goog200 (원계열)
ggtsdisplay(goog200)
# goog200 (차분데이터)
ggtsdisplay(diff(goog200))
ggtsdisplay(y)
# 랜덤워크 모형
x <- rnorm(300)
w <- x
for(t in 2:300){
x[t] = x[t-1]+ w[t]
}
x.ts <- ts(x)
ggtsdisplay(x.ts)
# 추세가 있는 랜덤워크 모형
x <- rnorm(300)
w <- x
for(t in 2:300){
x[t] = x[t-1]+ w[t] + 0.2
}
x.ts <- ts(x)
ggtsdisplay(x.ts)
# 랜덤워크 모형
x <- rnorm(300)
w <- x
for(t in 2:300){
x[t] = x[t-1]+ w[t]
}
x.ts <- ts(x)
ggtsdisplay(x.ts)
library(urca)
# 추세가 있는 랜덤워크 모형
x2 <- rnorm(300)
w2 <- x2
for(t in 2:300){
x2[t] = x2[t-1]+ w2[t] + 0.2
}
x2.ts <- ts(x2)
ggtsdisplay(x2.ts)
summary(ur.kpss(google))
summary(ur.kpss(google200))
summary(ur.kpss(goog200))
summary(ur.kpss(diff(goog200)))
summary(ur.kpss(y))
summary(ur.kpss(x.ts))
summary(ur.kpss(google))
summary(ur.kpss(x2.ts))
Box.test(goog200, lag = 10, type = 'Ljung-Box')
dtw는 음성 신호를 판단하는데 사용되는 알고리즘.
유클리드보다는 시계열에 유용하다.
Box.test(diff(goog200), lag = 10, type = 'Ljung-Box')
Box.test(y, lag = 10, type = 'Ljung-Box')
Box.test(x.ts, lag = 10, type = 'Ljung-Box')
Box.test(x2.ts, lag = 10, type = 'Ljung-Box')
plot(ksdq_eval_clust[1,], type = 'l', main="Silhouette index(to be maximized)")
# 각 군집 그래프
plot(ksdq_pc, type = "sc", clus = 1L)
plot(ksdq_pc)
# 각 군집 그래프
plot(ksdq_pc, type = "sc", clus = 1L)
# 군집 별 센트로이드 그래프(중위)
plot(ksdq_pc, type = "centroids", clus = 1L)
plot(ksdq_pc, type = "centroids", clus = 2L)
plot(ksdq_pc, type = "centroids", clus = 3L)
# 군집 별 센트로이드 그래프(중위)
plot(ksp_pc, type = "centroids", clus = 1L)
plot(ksp_pc, type = "centroids", clus = 2L)
plot(ksp_pc, type = "centroids", clus = 3L)
plot(ksp_pc, type = "centroids", clus = 4L)
plot(ksp_pc, type = "centroids", clus = 5L)
# 군집 별 센트로이드 그래프(중위)
plot(ksdq_pc, type = "centroids", clus = 1L)
plot(ksdq_pc, type = "centroids", clus = 2L)
plot(ksdq_pc, type = "centroids", clus = 3L)
plot(ksdq_pc, type = "centroids", clus = 4L)
# 각 군집 그래프
plot(usd_pc, type = "sc", clus = 1L)
# 군집 별 센트로이드 그래프(중위)
plot(usd_pc, type = "centroids", clus = 1L)
# 각 군집 그래프
plot(usd_pc, type = "sc", clus = 1L)
# 군집 별 센트로이드 그래프(중위)
plot(usd_pc, type = "centroids", clus = 1L)
plot(usd_pc, type = "centroids", clus = 2L)
plot(usd_pc, type = "centroids", clus = 3L)
usd_next_period
usd_next_period_ts
usd_next_period_ts[[1]][1]
plot(usd_next_period_ts[[1]][1])
usd_next_period_ts[[1]][1]
# 각 군집 그래프
plot(usd_pc, type = "sc", clus = 1L)
plot(usd_eval_clust[7,], type = 'l', main="COP index(to be minimized)")
ksdq_clust
ksdq_next_period
ksdq_part_now[ksdq_clust[[1]][1]]
plot(ksdq_part_now[ksdq_clust[[1]][1]])
plot(ksdq_part_now[ksdq_clust[[1]][1]], length(ksdq_part_now[ksdq_clust[[1]][1]]))
