wt[2] <- 0.5
wt[3] <- 0.0
}
else if (clust_data$KOSPI[i] == 1 & clust_data$KOSDAQ[i] == 1 & clust_data$USD[i] == 0){
wt[1] <- 0.475
wt[2] <- 0.475
wt[3] <- 0.05
}
else if (clust_data$KOSPI[i] == 1 & clust_data$KOSDAQ[i] == 0 & clust_data$USD[i] == 1){
wt[1] <- 0.50
wt[2] <- 0.45
wt[3] <- 0.05
}
else if (clust_data$KOSPI[i] == 0 & clust_data$KOSDAQ[i] == 1 & clust_data$USD[i] == 1){
wt[1] <- 0.45
wt[2] <- 0.50
wt[3] <- 0.05
}
else if (clust_data$KOSPI[i] == 1 & clust_data$KOSDAQ[i] == 0 & clust_data$USD[i] == 0){
wt[1] <- 0.475
wt[2] <- 0.425
wt[3] <- 0.1
}
else if (clust_data$KOSPI[i] == 0 & clust_data$KOSDAQ[i] == 0 & clust_data$USD[i] == 1){
wt[1] <- 0.45
wt[2] <- 0.45
wt[3] <- 0.1
}
else if (clust_data$KOSPI[i] == 0 & clust_data$KOSDAQ[i] == 1 & clust_data$USD[i] == 0){
wt[1] <- 0.425
wt[2] <- 0.475
wt[3] <- 0.1
}
else if (clust_data$KOSPI[i] == 0 & clust_data$KOSDAQ[i] == 0 & clust_data$USD[i] == 0){
wt[1] <- 0.425
wt[2] <- 0.425
wt[3] <- 0.15
}
wts[[i]] = xts(t(wt), order.by = index(rets[ep[i+1]]))
}
wts = do.call(rbind, wts)
glimpse(wts)
Tactical = Return.portfolio(R = rets, weights = wts, verbose = T)
head(Tactical$EOP.Value)
tail(Tactical$EOP.Value)
head(Tactical$returns)
tail(Tactical$returns)
Tactical$returns <- Tactical$returns[-length(Tactical$returns)]
tail(Tactical$returns)
portfolios = na.omit(cbind(rets[,1], Tactical$returns)) %>%
setNames(c('코스피', '국면분석 전략'))
tail(portfolios)
par(family = 'AppleGothic')
tail(portfolios)
charts.PerformanceSummary(portfolios,
main = "KOSPI vs Portfolio")
turnover = xts(rowSums(abs(Tactical$BOP.Weight -
timeSeries::lag(Tactical$EOP.Weight)),
na.rm = TRUE),
order.by = index(Tactical$BOP.Weight))
chart.TimeSeries(turnover)
charts.PerformanceSummary(portfolios,
main = "KOSPI vs Portfolio")
Return.cumulative(Tactical$returns)
Tactical$returns
Return.cumulative(rets[,1])
Return.cumulative(Tactical$returns)
library(PerformanceAnalytics)
chart.CumReturns(rets[,1])
chart.CumReturns(Tactical$returns)
chart.CumReturns(rets[,1])
chart.CumReturns(Tactical$returns)
chart.CumReturns(rets[,1])
chart.CumReturns(Tactical$returns)
chart.CumReturns(rets[,1])
chart.CumReturns(Tactical$returns)
chart.CumReturns(rets[,1])
chart.CumReturns(Tactical$returns)
chart.CumReturns(rets[,1])
chart.CumReturns(Tactical$returns)
Return.cumulative(Tactical$returns)
Return.cumulative(rets[,1])
charts.PerformanceSummary(portfolios,
main = "KOSPI vs Portfolio")
Return.cumulative(Tactical$returns)
prod((1+rets[,1]))-1
mean((1+rets[,1])) * 12
mean(rets[,1]) * 12
mean(Tactical$returns) * 12
# 연율화 수익률(기하)
(prod((1+rets[,1])))^(12/nrow(rets[,1])) - 1
(prod((1+Tactical$returns)))^(12/nrow(Tactical$returns)) - 1
# 연율화 수익률(산술)
Return.annualized(rets[,1], geometric = F)
Return.annualized(Tactical$returns, geometric = F)
# 연율화 수익률(기하)
Return.annualized(rets[,1])
Return.annualized(Tactical$returns)
# 연율화 변동성
sd(rets[,1]) * sqrt(12)
sd(Tactical$returns) * sqrt(12)
# 최대낙폭
maxDrawdown(rets[,1])
maxDrawdown(Tactical$returns)
apply.yearly(rets[,1], Return.cumulative) %>% head()
apply.yearly(Tactical$returns), Return.cumulative) %>% head()
apply.yearly(Tactical$returns, Return.cumulative) %>% head()
R.yr = apply.yearly(rets[,1], Return.cumulative) %>%
fortify.zoo() %>%
mutate(Index = year(Index)) %>%
gather(key, value, -Index) %>%
mutate(key = factor(key, levels = unique(key)))
ggplot(R.yr, aes(x = Index, y = value, fill = key)) +
geom_bar(position = "dodge", stat = "identity") +
ggtitle('Yearly Return') +
xlab(NULL) +
ylab(NULL) +
theme_bw() +
scale_y_continuous(expand = c(0.03, 0.03)) +
scale_x_continuous(breaks = R.yr$Index,
expand = c(0.01, 0.01)) +
theme(plot.title = element_text(hjust = 0.5,
size = 12),
legend.position = 'bottom',
legend.title = element_blank(),
legend.text = element_text(size=7),
axis.text.x = element_text(angle = 45,
hjust = 1, size = 8),
panel.grid.minor.x = element_blank() ) +
guides(fill = guide_legend(byrow = TRUE)) +
geom_text(aes(label = paste(round(value * 100, 2), "%"),
vjust = ifelse(value >= 0, -0.5, 1.5)),
position = position_dodge(width = 1),
size = 3)
R.yr = apply.yearly(Tactical$returns, Return.cumulative) %>%
fortify.zoo() %>%
mutate(Index = year(Index)) %>%
gather(key, value, -Index) %>%
mutate(key = factor(key, levels = unique(key)))
ggplot(R.yr, aes(x = Index, y = value, fill = key)) +
geom_bar(position = "dodge", stat = "identity") +
ggtitle('Yearly Return') +
xlab(NULL) +
ylab(NULL) +
theme_bw() +
scale_y_continuous(expand = c(0.03, 0.03)) +
scale_x_continuous(breaks = R.yr$Index,
expand = c(0.01, 0.01)) +
theme(plot.title = element_text(hjust = 0.5,
size = 12),
legend.position = 'bottom',
legend.title = element_blank(),
legend.text = element_text(size=7),
axis.text.x = element_text(angle = 45,
hjust = 1, size = 8),
panel.grid.minor.x = element_blank() ) +
guides(fill = guide_legend(byrow = TRUE)) +
geom_text(aes(label = paste(round(value * 100, 2), "%"),
vjust = ifelse(value >= 0, -0.5, 1.5)),
position = position_dodge(width = 1),
size = 3)
#R.yr = apply.yearly(Tactical$returns, Return.cumulative) %>%
R.yr = apply.yearly(rets[,1], Return.cumulative) %>%
fortify.zoo() %>%
mutate(Index = year(Index)) %>%
gather(key, value, -Index) %>%
mutate(key = factor(key, levels = unique(key)))
ggplot(R.yr, aes(x = Index, y = value, fill = key)) +
geom_bar(position = "dodge", stat = "identity") +
ggtitle('Yearly Return') +
xlab(NULL) +
ylab(NULL) +
theme_bw() +
scale_y_continuous(expand = c(0.03, 0.03)) +
scale_x_continuous(breaks = R.yr$Index,
expand = c(0.01, 0.01)) +
theme(plot.title = element_text(hjust = 0.5,
size = 12),
legend.position = 'bottom',
legend.title = element_blank(),
legend.text = element_text(size=7),
axis.text.x = element_text(angle = 45,
hjust = 1, size = 8),
panel.grid.minor.x = element_blank() ) +
guides(fill = guide_legend(byrow = TRUE)) +
geom_text(aes(label = paste(round(value * 100, 2), "%"),
vjust = ifelse(value >= 0, -0.5, 1.5)),
position = position_dodge(width = 1),
size = 3)
R.yr = apply.yearly(Tactical$returns, Return.cumulative) %>%
#R.yr = apply.yearly(rets[,1], Return.cumulative) %>%
fortify.zoo() %>%
mutate(Index = year(Index)) %>%
gather(key, value, -Index) %>%
mutate(key = factor(key, levels = unique(key)))
ggplot(R.yr, aes(x = Index, y = value, fill = key)) +
geom_bar(position = "dodge", stat = "identity") +
ggtitle('Yearly Return') +
xlab(NULL) +
ylab(NULL) +
theme_bw() +
scale_y_continuous(expand = c(0.03, 0.03)) +
scale_x_continuous(breaks = R.yr$Index,
expand = c(0.01, 0.01)) +
theme(plot.title = element_text(hjust = 0.5,
size = 12),
legend.position = 'bottom',
legend.title = element_blank(),
legend.text = element_text(size=7),
axis.text.x = element_text(angle = 45,
hjust = 1, size = 8),
panel.grid.minor.x = element_blank() ) +
guides(fill = guide_legend(byrow = TRUE)) +
geom_text(aes(label = paste(round(value * 100, 2), "%"),
vjust = ifelse(value >= 0, -0.5, 1.5)),
position = position_dodge(width = 1),
size = 3)
# 연도별 수익률
apply.yearly(rets[,1], Return.cumulative)
apply.yearly(Tactical$returns, Return.cumulative)
# 승률 및 롤링 윈도우 값
UpsideFrequency(df$QMJ, MAR = rets[,1])
# 승률 및 롤링 윈도우 값
UpsideFrequency(Tactical$returns, MAR = rets[,1])
charts.PerformanceSummary(portfolios,
main = "KOSPI vs Portfolio")
# 누적수익률 수치
Return.cumulative(rets[,1])
Return.cumulative(Tactical$returns)
rets
rets[,1]
head(rets[,1])
UpsideFrequency(rets[,1], MAR = Tactical$returns)
# 승률 및 롤링 윈도우 값
UpsideFrequency(Tactical$returns, MAR = rets[,1])
# 롤링 윈도우 값
roll_12 = Tactical$returns %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
UpsideFrequency(.,MAR = rets[,1])
roll_12
roll_24 = df$QMJ %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 24, Return.annualized) %>% na.omit() %>%
UpsideFrequency(., MAR = rets[,1])
roll_24
roll_24 = Tactical$returns %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 24, Return.annualized) %>% na.omit() %>%
UpsideFrequency(., MAR = rets[,1])
roll_24
roll_36 = Tactical$returns %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 36, Return.annualized) %>% na.omit() %>%
UpsideFrequency(., MAR = rets[,1])
roll_win = cbind(roll_12, roll_24, roll_36)
print(roll_win)
# 롤링 윈도우 연율화 수익률
Tactical$returns %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes(x = Index, y = QMJ)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
# 롤링 윈도우 연율화 수익률
Tactical$returns %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes(x = Index, y = Time)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
# 롤링 윈도우 연율화 수익률
Tactical$returns %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
#ggplot(aes(x = Index, y = QMJ)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
# 롤링 윈도우 연율화 수익률
Tactical$returns %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes()) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
# 롤링 윈도우 연율화 수익률
Tactical$returns %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes(x = Index, y = Tactical$returns)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
# 롤링 윈도우 연율화 수익률
Tactical$returns %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes(x = Index, y = Tactical$returns)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
portfolios
rets[,1]
head(rets[1,])
head(rets[,1])
portfolios
head(portfolios)
head(rets[,1])
charts.PerformanceSummary(portfolios,
main = "KOSPI vs Portfolio")
Return.cumulative(portfolios$코스피)
# 누적수익률 수치
Return.cumulative(rets[,1])
portfolios = na.omit(cbind(rets[,1], Tactical$returns)) %>%
setNames(c('KOSPI', 'Portfolio'))
head(rets[,1])
head(portfolios)
par(family = 'AppleGothic')
tail(portfolios)
charts.PerformanceSummary(portfolios,
main = "KOSPI vs Portfolio")
Return.cumulative(portfolios$KOSPI)
chart.CumReturns(portfolios$KOSPI)
chart.CumReturns(portfolios$Portfolio)
chart.CumReturns(portfolios$KOSPI)
chart.CumReturns(portfolios$Portfolio)
Return.cumulative(portfolios$Portfolio)
# 누적수익률 수치
Return.cumulative(portfolios$KOSPI)
Return.cumulative(portfolios$Portfolio)
# 연율화 수익률(산술)
Return.annualized(portfolios$KOSPI, geometric = F)
Return.annualized(portfolios$Portfolio, geometric = F)
# 연율화 수익률(기하)
Return.annualized(portfolios$KOSPI)
Return.annualized(portfolios$Portfolio)
# 연율화 변동성
sd(portfolios$KOSPI) * sqrt(12)
sd(portfolios$Portfolio) * sqrt(12)
# 최대낙폭
maxDrawdown(portfolios$KOSPI)
maxDrawdown(portfolios$Portfolio)
# 연도별 수익률
apply.yearly(portfolios$KOSPI, Return.cumulative)
apply.yearly(portfolios$Portfolio, Return.cumulative)
R.yr = apply.yearly(portfolios$Portfolio, Return.cumulative) %>%
#R.yr = apply.yearly(portfolios$KOSPI, Return.cumulative) %>%
fortify.zoo() %>%
mutate(Index = year(Index)) %>%
gather(key, value, -Index) %>%
mutate(key = factor(key, levels = unique(key)))
ggplot(R.yr, aes(x = Index, y = value, fill = key)) +
geom_bar(position = "dodge", stat = "identity") +
ggtitle('Yearly Return') +
xlab(NULL) +
ylab(NULL) +
theme_bw() +
scale_y_continuous(expand = c(0.03, 0.03)) +
scale_x_continuous(breaks = R.yr$Index,
expand = c(0.01, 0.01)) +
theme(plot.title = element_text(hjust = 0.5,
size = 12),
legend.position = 'bottom',
legend.title = element_blank(),
legend.text = element_text(size=7),
axis.text.x = element_text(angle = 45,
hjust = 1, size = 8),
panel.grid.minor.x = element_blank() ) +
guides(fill = guide_legend(byrow = TRUE)) +
geom_text(aes(label = paste(round(value * 100, 2), "%"),
vjust = ifelse(value >= 0, -0.5, 1.5)),
position = position_dodge(width = 1),
size = 3)
#R.yr = apply.yearly(portfolios$Portfolio, Return.cumulative) %>%
R.yr = apply.yearly(portfolios$KOSPI, Return.cumulative) %>%
fortify.zoo() %>%
mutate(Index = year(Index)) %>%
gather(key, value, -Index) %>%
mutate(key = factor(key, levels = unique(key)))
ggplot(R.yr, aes(x = Index, y = value, fill = key)) +
geom_bar(position = "dodge", stat = "identity") +
ggtitle('Yearly Return') +
xlab(NULL) +
ylab(NULL) +
theme_bw() +
scale_y_continuous(expand = c(0.03, 0.03)) +
scale_x_continuous(breaks = R.yr$Index,
expand = c(0.01, 0.01)) +
theme(plot.title = element_text(hjust = 0.5,
size = 12),
legend.position = 'bottom',
legend.title = element_blank(),
legend.text = element_text(size=7),
axis.text.x = element_text(angle = 45,
hjust = 1, size = 8),
panel.grid.minor.x = element_blank() ) +
guides(fill = guide_legend(byrow = TRUE)) +
geom_text(aes(label = paste(round(value * 100, 2), "%"),
vjust = ifelse(value >= 0, -0.5, 1.5)),
position = position_dodge(width = 1),
size = 3)
# 승률
UpsideFrequency(portfolios$Portfolio, MAR = portfolios$KOSPI)
UpsideFrequency(portfolios$KOSPI, MAR = portfolios$Portfolio)
# 롤링 윈도우 값
roll_12 = portfolios$Portfolio %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
UpsideFrequency(.,MAR = portfolios$KOSPI)
roll_24 = portfolios$Portfolio %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 24, Return.annualized) %>% na.omit() %>%
UpsideFrequency(., MAR = portfolios$KOSPI)
roll_36 = portfolios$Portfolio %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 36, Return.annualized) %>% na.omit() %>%
UpsideFrequency(., MAR = portfolios$KOSPI)
roll_win = cbind(roll_12, roll_24, roll_36)
print(roll_win)
# 롤링 윈도우 연율화 수익률
portfolios$Portfolio %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes(x = Index, y = portfolios$Portfolio)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
# 롤링 윈도우 연율화 수익률
portfolios$Portfolio %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes(x = Index, y = .)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
# 롤링 윈도우 연율화 수익률
portfolios$Portfolio %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes(x = Index, y = .)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
# 롤링 윈도우 연율화 수익률
portfolios$Portfolio %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes(x = Index, y = portfolios$Portfolio.return)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
# 롤링 윈도우 연율화 수익률
portfolios$Portfolio %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes(x = Index, y = portfolios$Portfolio)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
# 롤링 윈도우 연율화 수익률
portfolios$Portfolio %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes(x = Index, y = portfolios.return)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
# 롤링 윈도우 연율화 수익률
portfolios$Portfolio %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes(x = Index, y = Portfolio)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
print(roll_win)
print(roll_win)
# 승률
UpsideFrequency(portfolios$Portfolio, MAR = portfolios$KOSPI)
charts.PerformanceSummary(portfolios,
main = "KOSPI vs Portfolio")
charts.PerformanceSummary(portfolios$KOSPI)
charts.PerformanceSummary(portfolios$Portfolio)
chart.CumReturns(portfolios$KOSPI)
chart.CumReturns(portfolios$Portfolio)
chart.CumReturns(portfolios$KOSPI)
chart.CumReturns(portfolios$Portfolio)
chart.CumReturns(portfolios$KOSPI)
chart.CumReturns(portfolios$Portfolio)
chart.CumReturns(portfolios$KOSPI)
chart.CumReturns(portfolios$Portfolio)
chart.CumReturns(portfolios$KOSPI)
chart.CumReturns(portfolios$Portfolio)
# 누적수익률 수치
Return.cumulative(portfolios$KOSPI)
Return.cumulative(portfolios$Portfolio)
# 연율화 수익률(산술)
Return.annualized(portfolios$KOSPI, geometric = F)
Return.annualized(portfolios$Portfolio, geometric = F)
# 연율화 수익률(기하)
Return.annualized(portfolios$KOSPI)
Return.annualized(portfolios$Portfolio)
# 연율화 변동성
sd(portfolios$KOSPI) * sqrt(12)
sd(portfolios$Portfolio) * sqrt(12)
# 최대낙폭
maxDrawdown(portfolios$KOSPI)
maxDrawdown(portfolios$Portfolio)
# 연도별 수익률
apply.yearly(portfolios$KOSPI, Return.cumulative)
apply.yearly(portfolios$Portfolio, Return.cumulative)
# 승률
UpsideFrequency(portfolios$Portfolio, MAR = portfolios$KOSPI)
UpsideFrequency(portfolios$KOSPI, MAR = portfolios$Portfolio)
print(roll_win)
