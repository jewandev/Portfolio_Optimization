for (i in (lookback+1) : length(ksdq_ep)) {
ksdq_part[[i]] <- ksdq[ksdq_ep[i-lookback] : ksdq_ep[i] , 1]
}
### 달러
usd = read.csv('data/usd_close.csv', row.names = 1,
stringsAsFactors = FALSE) %>% as.xts()
usd_ep = endpoints(usd, on = 'months')
head(usd)
usd_part <- list()
lookback <- 1
for (i in (lookback+1) : length(usd_ep)) {
usd_part[[i]] <- ksdq[usd_ep[i-lookback] : usd_ep[i] , 1]
}
for (i in (lookback+1) : length(usd_ep)) {
usd_part[[i]] <- usd[usd_ep[i-lookback] : usd_ep[i] , 1]
}
usd_part
length(ksp_part)
length(ksdq_part)
length(usd_part)
ksp_ep = endpoints(ksp, on = 'months')
head(ksp)
ksp_part <- list()
lookback <- 1
for (i in (lookback+1) : length(ksp_ep)) {
ksp_part[[i]] <- ksp[ksp_ep[i-lookback] : ksp_ep[i] , 1]
}
ksp_part
length(ksp_part)
length(ksdq_part)
length(usd_part)
CharTraj
data("uciCT")
glimpse(CharTraj)
library(dtwclust)
data("uciCT")
glimpse(CharTraj)
glimpse(ksp_part)
glimpse(CharTraj)
glimpse(ksp_part)
glimpse(CharTraj)
pc <- tsclust(ksp_part, type = "partitional", k = 20L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 20L)))
CharTraj[1]
CharTraj[1]
ksp_part[1]
ksp_part[2]
list_num <- 1
list_num
list_num =+ 1
list_num
list_num = list_num+ 1
list_num
list_num <- 1
ksp_ep = endpoints(ksp, on = 'months')
head(ksp)
ksp_part <- list()
lookback <- 1
for (i in (lookback+1) : length(ksp_ep)) {
ksp_part[[i-1]] <- ksp[ksp_ep[i-lookback] : ksp_ep[i] , 1]
}
ksp_part
### 코스닥
ksdq = read.csv('data/kosdaq_close.csv', row.names = 1,
stringsAsFactors = FALSE) %>% as.xts()
ksdq_ep = endpoints(ksdq, on = 'months')
head(ksdq)
ksdq_part <- list()
lookback <- 1
for (i in (lookback+1) : length(ksdq_ep)) {
ksdq_part[[i-1]] <- ksdq[ksdq_ep[i-lookback] : ksdq_ep[i] , 1]
}
### 달러
usd = read.csv('data/usd_close.csv', row.names = 1,
stringsAsFactors = FALSE) %>% as.xts()
usd_ep = endpoints(usd, on = 'months')
head(usd)
usd_part <- list()
lookback <- 1
for (i in (lookback+1) : length(usd_ep)) {
usd_part[[i-1]] <- usd[usd_ep[i-lookback] : usd_ep[i] , 1]
}
length(ksp_part)
length(ksdq_part)
length(usd_part)
usd$Price
as.vector(usd$Price)
ksp_ep = endpoints(ksp, on = 'months')
head(ksp)
ksp_part <- list()
lookback <- 1
for (i in (lookback+1) : length(ksp_ep)) {
ksp_part[[i-1]] <- as.vector(ksp[ksp_ep[i-lookback] : ksp_ep[i] , 1])
}
ksp_part
ksdq_ep = endpoints(ksdq, on = 'months')
head(ksdq)
ksdq_part <- list()
lookback <- 1
for (i in (lookback+1) : length(ksdq_ep)) {
ksdq_part[[i-1]] <- as.vector(ksdq[ksdq_ep[i-lookback] : ksdq_ep[i] , 1])
}
### 달러
usd = read.csv('data/usd_close.csv', row.names = 1,
stringsAsFactors = FALSE) %>% as.xts()
usd_ep = endpoints(usd, on = 'months')
head(usd)
usd_part <- list()
lookback <- 1
for (i in (lookback+1) : length(usd_ep)) {
usd_part[[i-1]] <- as.vector(usd[usd_ep[i-lookback] : usd_ep[i] , 1])
}
length(ksp_part)
length(ksdq_part)
length(usd_part)
### 분할한 데이터 클러스터링 해보기 ----
length(ksp_part)
glimpse(ksp_part)
pc <- tsclust(ksp_part, type = "partitional", k = 20L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 20L)))
plot(pc)
pc <- tsclust(ksp_part, type = "partitional", k = 10L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 10L)))
plot(pc)
pc <- tsclust(ksp_part, type = "partitional", k = 3L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 3L)))
plot(pc)
pc <- tsclust(ksp_part, type = "partitional", k = 10L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 10L)))
plot(pc)
### 코스닥
glimpse(ksdq_part)
pc <- tsclust(ksdq_part, type = "partitional", k = 10L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 10L)))
plot(pc)
### 달러환율
glimpse(usd_part)
pc <- tsclust(usd_part, type = "partitional", k = 10L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 10L)))
plot(pc)
CharTrajMV
# 표준화하기
ksp_part[1]
# 표준화하기
mean(ksp_part[1])
ksp_part[1]
# 표준화하기
mean(c(ksp_part[1][1]: ksp_part[1][21])
# 표준화하기
mean(c(ksp_part[1][1]: ksp_part[1][21]))
# 표준화하기
mean(c(ksp_part[1][1]: ksp_part[1][21]))
ksp_part[1][21]
ksp_part[1][20]
ksp_part[1][1]
ksp_part[[1]][1]
# 표준화하기
mean(c(ksp_part[[1]][1:21]))
# 표준화하기
mean(c(ksp_part[[1]][1:length(ksp_part[[1]])]))
ksp_part[[1]]
# 표준화하기
mean_ex <- mean(c(ksp_part[[1]][1:length(ksp_part[[1]])]))
ksp_part[[1]] - mean_ex
plot(ksp_part[[1]] - mean_ex)
lineplot(ksp_part[[1]] - mean_ex)
line(ksp_part[[1]] - mean_ex)
line(ksp_part[[1]] - mean_ex)
plot(ksp_part[[1]] - mean_ex)
ksp_part[[1]] - mean_ex
std(ksp_part[[1]])
sd(ksp_part[[1]])
(ksp_part[[1]] - mean_ex)/sd(ksp_part[[1]])
length(ksp_part)
c(1: length(ksp_part))
## 반복문으로 전체 ㄱㄱ
# 코스피
for (i in c(1: length(ksp_part))){
part_mean <- mean(c(ksp_part[[i]][1:length(ksp_part[[i]])]))
ksp_part_Norm[[i]] <- (ksp_part[[i]] - part_mean) / sd(ksp_part[[i]])
}
## 반복문으로 전체 ㄱㄱ
# 코스피
ksp_part_Norm <- list()
for (i in c(1: length(ksp_part))){
part_mean <- mean(c(ksp_part[[i]][1:length(ksp_part[[i]])]))
ksp_part_Norm[[i]] <- (ksp_part[[i]] - part_mean) / sd(ksp_part[[i]])
}
ksp_part_Norm
## 반복문으로 전체 ㄱㄱ
# 코스피
ksp_part_Norm <- list()
for (i in c(1: length(ksp_part))){
part_mean <- mean(c(ksp_part[[i]][1:length(ksp_part[[i]])]))
ksp_part_Norm[[i]] <- (ksp_part[[i]] - part_mean) / sd(ksp_part[[i]])
}
ksp_part_Norm
# 코스닥
ksdq_part_Norm <- list()
for (i in c(1: length(ksdq_part))){
part_mean <- mean(c(ksdq_part[[i]][1:length(ksdq_part[[i]])]))
ksdq_part_Norm[[i]] <- (ksdq_part[[i]] - part_mean) / sd(ksdq_part[[i]])
}
ksdq_part_Norm
# 달러환율
usd_part_Norm <- list()
for (i in c(1: length(usd_part))){
part_mean <- mean(c(usd_part[[i]][1:length(usd_part[[i]])]))
usd_part_Norm[[i]] <- (usd_part[[i]] - part_mean) / sd(usd_part[[i]])
}
usd_part_Norm
### 코스피
glimpse(ksp_part_Norm)
pc <- tsclust(ksp_part_Norm, type = "partitional", k = 10L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 10L)))
plot(pc)
pc <- tsclust(ksp_part_Norm, type = "partitional", k = 5L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 5L)))
plot(pc)
pc <- tsclust(ksp_part_Norm, type = "partitional", k = 6L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 6L)))
plot(pc)
pc <- tsclust(ksp_part_Norm, type = "partitional", k = 7L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 7L)))
plot(pc)
pc <- tsclust(ksp_part_Norm, type = "partitional", k = 8L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 8L)))
plot(pc)
pc <- tsclust(ksp_part_Norm, type = "partitional", k = 9L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 9L)))
plot(pc)
pc <- tsclust(ksp_part_Norm, type = "partitional", k = 8L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 8L)))
plot(pc)
pc <- tsclust(ksp_part_Norm, type = "partitional", k = 7L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 8L)))
plot(pc)
pc <- tsclust(ksp_part_Norm, type = "partitional", k = 7L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 7L)))
plot(pc)
CharTrajMV
### 코스닥
glimpse(ksdq_part_Norm)
pc <- tsclust(ksdq_part_Norm, type = "partitional", k = 10L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 10L)))
plot(pc)
pc <- tsclust(ksdq_part_Norm, type = "partitional", k = 7L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 7L)))
plot(pc)
### 달러환율
glimpse(usd_part_Norm)
pc <- tsclust(usd_part_Norm, type = "partitional", k = 10L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 10L)))
plot(pc)
pc <- tsclust(usd_part_Norm, type = "partitional", k = 7L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 7L)))
plot(pc)
pc <- tsclust(usd_part_Norm, type = "partitional", k = 10L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 10L)))
plot(pc)
pc <- tsclust(usd_part_Norm, type = "partitional", k = 7L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 7L)))
plot(pc)
pc <- tsclust(usd_part_Norm, type = "partitional", k = 8L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 8L)))
plot(pc)
pc <- tsclust(usd_part_Norm, type = "partitional", k = 9L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 9L)))
plot(pc)
pc
args
pc
names(pc)
hc <- tsclust(ksp_part_Norm, type = "hierarchical", k = 20L,
distance = "sbd", trace = TRUE,
control = hierarchical_control(method = "average"))
plot(hc)
plot(pc)
pc <- tsclust(ksp_part_Norm, type = "partitional", k = 7L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 7L)))
plot(pc)
pc
summarise(pc)
summary(pc)
pc <- tsclust(ksp_part_Norm, type = "partitional", k = 7L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 20L)))
plot(pc)
pc <- tsclust(ksp_part_Norm, type = "partitional", k = 7L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 7L)))
plot(pc)
pc <- tsclust(ksp_part_Norm, type = "partitional", k = 7L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 20L)))
plot(pc)
args
dtw_cluster@centroids
pc@centroids
pc@datalist
pc@clusinfo
pc@cldist
pc@iter
plot(pc@iter)
plot(pc@centroids)
pc@centroids
pc@centroids[1]
)
)
plot(pc@centroids[1])
pc@centroids[1]
plot(pc)
pc
pc[1]
pc@centroid
pc@seed
pc@dots
pc@family
pc@converged
pc@cldist
pc@call
pc@type
pc@distance
pc@proctime
pc@iter
?(pc@iter)
pc@iter?
pc@centroids[1]
pc@iter(?)
?(pc@iter)
?pc@iter
pc.dtw <- tsclust(normalized_search,
type="partitional",
centroid = "pam",
k = 2L:20L,
distance ="dtw_basic",
seed=1234,
trace=T,
args = tsclust_args(dist = list(window.size = 20L))
)
library(dtwclust)
pc.dtw <- tsclust(ksp_part_Norm,
type="partitional",
centroid = "pam",
k = 2L:20L,
distance ="dtw_basic",
seed=1234,
trace=T,
args = tsclust_args(dist = list(window.size = 20L))
)
eval_clust<-sapply(pc.dtw, cvi) # 지표 값 데이터 저장
eval_clust
plot(eval_clust[1,],type="l", main="sil index",
xlab="The number of clusters", ylab="극댓값 부분을 찾아주세요")
eval_clust[1]
eval_clust[1,]
eval_clust[2,]
eval_clust[4,]
plot(eval_clust[4,],type="l", main="sil index",
xlab="The number of clusters", ylab="극댓값 부분을 찾아주세요")
pc.dtw <- tsclust(ksp_part_Norm,
type="partitional",
centroid = "pam",
k = 2L:14L,
distance ="dtw_basic",
seed=1234,
trace=T,
args = tsclust_args(dist = list(window.size = 20L))
)
eval_clust<-sapply(pc.dtw, cvi) # 지표 값 데이터 저장
eval_clust
plot(eval_clust[1,],type="l", main="sil index",
xlab="The number of clusters", ylab="극댓값 부분을 찾아주세요")
pc.dtw <- tsclust(ksp_part_Norm,
type="partitional",
centroid = "pam",
k = 2L:14L,
distance ="dtw_basic",
seed=1234,
trace=T,
args = tsclust_args(dist = list(window.size = 60L))
)
eval_clust<-sapply(pc.dtw, cvi) # 지표 값 데이터 저장
eval_clust[4,]
eval_clust
plot(eval_clust[1,],type="l", main="sil index",
xlab="The number of clusters", ylab="극댓값 부분을 찾아주세요")
plot(eval_clust[1,],type="l", main="sil index",
xlab="The number of clusters", ylab="To Be Maximum")
pc <- tsclust(ksp_part_Norm, type = "partitional", k = 4L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 60L)))
plot(pc)
pc.dtw <- tsclust(ksp_part_Norm,
type="partitional",
centroid = "pam",
k = 2L:14L,
distance ="dtw_basic",
seed=1234,
trace=T,
args = tsclust_args(dist = list(window.size = 60L))
)
eval_clust<-sapply(pc.dtw, cvi) # 지표 값 데이터 저장
eval_clust[4,]
plot(eval_clust[1,],type="l", main="sil index",
xlab="The number of clusters", ylab="To Be Maximum")
pc@
pc@centroids
pc.dtw <- tsclust(ksp_part_Norm,
type="partitional",
centroid = "pam",
k = 2L:14L,
distance ="dtw_basic",
seed=1234,
trace=T,
args = tsclust_args(dist = list(window.size = 60L))
)
eval_clust<-sapply(pc.dtw, cvi) # 지표 값 데이터 저장
eval_clust[4,]
plot(eval_clust[4,])
plot(eval_clust[4,], type = 'l')
plot(eval_clust[1,], type = 'l')
plot(eval_clust[4,], type = 'l')
plot(eval_clust[1,],type="l", main="sil index",
xlab="The number of clusters", ylab="To Be Maximum")
plot(eval_clust[4,], type = 'l')
plot(eval_clust[1,], type = 'l')
pc <- tsclust(ksp_part_Norm, type = "partitional", k = 4L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 60L)))
plot(pc)
pc <- tsclust(ksp_part_Norm, type = "partitional", k = 8L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 60L)))
plot(pc)
pc@
pc@centroids
pc
pc@
pc
pc
pc@centroids
pc@centroid
library(dtw)
plot(pc)
diss(ksp_part_Norm)
library(dtwclust)
diss(ksp_part_Norm)
library(dtwclust)
diss(ksp_part_Norm)
library(TSclust)
install.packages('TSclust')
library(TSclust)
library(TSclust)
diss(ksp_part_Norm)
library(TSclust)
