R_excess = QMJ - RF,
Mkt_excess = MKT - RF) %>%
tk_xts(date_var = DATE)
library(PerformanceAnalytics)
library(PerformanceAnalytics)
chart.CumReturns(df$QMJ)
excel_sheets(tf)
df_QMJ = read_xlsx(tf, sheet = 'QMJ Factors', skip = 18) %>%
select(DATE, Global)
df_MKT = read_xlsx(tf, sheet = 'MKT', skip = 18) %>%
select(DATE, Global)
df_SMB = read_xlsx(tf, sheet = 'SMB', skip = 18) %>%
select(DATE, Global)
df_HML_Devil = read_xlsx(tf, sheet = 'HML Devil',
skip = 18) %>%
select(DATE, Global)
df_UMD = read_xlsx(tf, sheet = 'UMD', skip = 18) %>%
select(DATE, Global)
df_RF = read_xlsx(tf, sheet = 'RF', skip = 18)
df = Reduce(function(x, y) inner_join(x, y, by = 'DATE'),
list(df_QMJ, df_MKT, df_SMB,
df_HML_Devil,df_UMD, df_RF)) %>%
setNames(c('DATE','QMJ', 'MKT', 'SMB',
'HML', 'UMD', 'RF')) %>%
na.omit() %>%
mutate(DATE = as.Date(DATE, "%m/%d/%Y"),
R_excess = QMJ - RF,
Mkt_excess = MKT - RF) %>%
tk_xts(date_var = DATE)
chart.CumReturns(df$QMJ)
prod((1+df$QMJ)) - 1 # 누적수익률
mean(df$QMJ) * 12 # 연율화 수익률(산술)
(prod((1+df$QMJ)))^(12 / nrow(df$QMJ)) - 1 # 연율화 수익률(기하)
Return.cumulative(df$QMJ) # 누적수익률
Return.annualized(df$QMJ, geometric = FALSE) # 연율화 수익률(산술)
Return.annualized(df$QMJ) # 연율화 수익률(기하)
sd(df$QMJ) * sqrt(12) # 연율화 변동성
StdDev.annualized(df$QMJ) # 연율화 변동성
SharpeRatio.annualized(df$QMJ, Rf = df$RF, geometric = TRUE)
table.Drawdowns(df$QMJ)
maxDrawdown(df$QMJ)
chart.Drawdown(df$QMJ)
CalmarRatio(df$QMJ)
apply.yearly(df$QMJ, Return.cumulative) %>% head()
apply.yearly(df$QMJ, Return.cumulative) %>% head()
ggplot(R.yr, aes(x = Index, y = value, fill = key)) +
geom_bar(position = "dodge", stat = "identity") +
ggtitle('Yearly Return') +
xlab(NULL) +
ylab(NULL) +
theme_bw() +
scale_y_continuous(expand = c(0.03, 0.03)) +
scale_x_continuous(breaks = R.yr$Index,
expand = c(0.01, 0.01)) +
theme(plot.title = element_text(hjust = 0.5,
size = 12),
legend.position = 'bottom',
legend.title = element_blank(),
legend.text = element_text(size=7),
axis.text.x = element_text(angle = 45,
hjust = 1, size = 8),
panel.grid.minor.x = element_blank() ) +
guides(fill = guide_legend(byrow = TRUE)) +
geom_text(aes(label = paste(round(value * 100, 2), "%"),
vjust = ifelse(value >= 0, -0.5, 1.5)),
position = position_dodge(width = 1),
size = 3)
apply.yearly(df$QMJ, Return.cumulative) %>% head()
apply.yearly(df$QMJ, Return.cumulative) %>% head()
library(lubridate)
library(tidyr)
library(ggplot2)
R.yr = apply.yearly(df$QMJ, Return.cumulative) %>%
fortify.zoo() %>%
mutate(Index = year(Index)) %>%
gather(key, value, -Index) %>%
mutate(key = factor(key, levels = unique(key)))
ggplot(R.yr, aes(x = Index, y = value, fill = key)) +
geom_bar(position = "dodge", stat = "identity") +
ggtitle('Yearly Return') +
xlab(NULL) +
ylab(NULL) +
theme_bw() +
scale_y_continuous(expand = c(0.03, 0.03)) +
scale_x_continuous(breaks = R.yr$Index,
expand = c(0.01, 0.01)) +
theme(plot.title = element_text(hjust = 0.5,
size = 12),
legend.position = 'bottom',
legend.title = element_blank(),
legend.text = element_text(size=7),
axis.text.x = element_text(angle = 45,
hjust = 1, size = 8),
panel.grid.minor.x = element_blank() ) +
guides(fill = guide_legend(byrow = TRUE)) +
geom_text(aes(label = paste(round(value * 100, 2), "%"),
vjust = ifelse(value >= 0, -0.5, 1.5)),
position = position_dodge(width = 1),
size = 3)
UpsideFrequency(df$QMJ, MAR = 0)
roll_12 = df$QMJ %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
UpsideFrequency()
roll_24 = df$QMJ %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 24, Return.annualized) %>% na.omit() %>%
UpsideFrequency()
roll_36 = df$QMJ %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 36, Return.annualized) %>% na.omit() %>%
UpsideFrequency()
roll_win = cbind(roll_12, roll_24, roll_36)
print(roll_win)
df$QMJ %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes(x = Index, y = QMJ)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
# 팩터 회귀분석 및 테이블로 나타내기
reg = lm(R_excess ~ Mkt_excess + SMB + HML + UMD, data = df)
# summary(reg)
summary(reg)$coefficient
cbind(Tactical$net, GDAA$net) %>%
setNames(c('Tactical Fee', 'GDAA Fee')) %>%
charts.PerformanceSummary(main = ' Tactical vs GDAA')
cbind(Tactical$returns, Tactical$net) %>%
setNames(c('No Fee', 'After Fee')) %>%
charts.PerformanceSummary(main = 'Tactical')
symbols = c('SPY', 'SHY')
getSymbols(symbols, src = 'yahoo')
prices = do.call(cbind,
lapply(symbols, function(x) Ad(get(x))))
rets = na.omit(Return.calculate(prices))
prices = do.call(cbind,
lapply(symbols, function(x) Ad(get(x))))
rets = na.omit(Return.calculate(prices))
ep = endpoints(rets, on = 'months')
print(ep)
wts = list()
rets = na.omit(Return.calculate(prices))
ep = endpoints(rets, on = 'months')
print(ep)
wts = list()
lookback = 10
i = lookback + 1
sub_price = prices[ep[i-lookback] : ep[i] , 1]
head(sub_price, 3)
tail(sub_price, 3)
sma = mean(sub_price)
wt = rep(0, 2)
wt[1] = ifelse(last(sub_price) > sma, 1, 0)
wt[2] = 1 - wt[1]
wts[[i]] = xts(t(wt), order.by = index(rets[ep[i]]))
ep = endpoints(rets, on = 'months')
wts = list()
lookback = 10
for (i in (lookback+1) : length(ep)) {
sub_price = prices[ep[i-lookback] : ep[i] , 1]
sma = mean(sub_price)
wt = rep(0, 2)
wt[1] = ifelse(last(sub_price) > sma, 1, 0)
wt[2] = 1 - wt[1]
wts[[i]] = xts(t(wt), order.by = index(rets[ep[i]]))
}
wts = do.call(rbind, wts)
Tactical = Return.portfolio(rets, wts, verbose = TRUE)
portfolios = na.omit(cbind(rets[,1], Tactical$returns)) %>%
setNames(c('매수 후 보유', '시점 선택 전략'))
charts.PerformanceSummary(portfolios,
main = "Buy & Hold vs Tactical")
turnover = xts(rowSums(abs(Tactical$BOP.Weight -
timeSeries::lag(Tactical$EOP.Weight)),
na.rm = TRUE),
order.by = index(Tactical$BOP.Weight))
chart.TimeSeries(turnover)
charts.PerformanceSummary(portfolios,
main = "Buy & Hold vs Tactical")
turnover = xts(rowSums(abs(Tactical$BOP.Weight -
timeSeries::lag(Tactical$EOP.Weight)),
na.rm = TRUE),
order.by = index(Tactical$BOP.Weight))
chart.TimeSeries(turnover)
######GDAA----------
symbols = c('SPY', # 미국 주식
'IEV', # 유럽 주식
'EWJ', # 일본 주식
'EEM', # 이머징 주식
'TLT', # 미국 장기채
'IEF', # 미국 중기채
'IYR', # 미국 리츠
'RWX', # 글로벌 리츠
'GLD', # 금
'DBC'  # 상품
)
getSymbols(symbols, src = 'yahoo')
prices = do.call(cbind, lapply(symbols, function(x) Ad(get(x)))) %>%
setNames(symbols)
rets = Return.calculate(prices) %>% na.omit()
ep = endpoints(rets, on = 'months')
wts = list()
lookback = 12
wt_zero = rep(0, 10) %>% setNames(colnames(rets))
for (i in (lookback+1) : length(ep)) {
sub_ret = rets[ep[i-lookback] : ep[i] , ]
cum = Return.cumulative(sub_ret)
K = rank(-cum) <= 5
covmat = cov(sub_ret[, K])
wt = wt_zero
wt[K] = optimalPortfolio(covmat,
control = list(type = 'minvol',
constraint = 'user',
LB = rep(0.10, 5),
UB = rep(0.30, 5)))
wts[[i]] = xts(t(wt), order.by = index(rets[ep[i]]))
}
wts = do.call(rbind, wts)
GDAA = Return.portfolio(rets, wts, verbose = TRUE)
charts.PerformanceSummary(GDAA$returns, main = '동적자산배분')
portfolios = na.omit(cbind(GDAA$returns, Tactical$returns)) %>%
setNames(c('동적 자산 배분', '시점 선택 전략'))
charts.PerformanceSummary(portfolios, main = "시점선택 VS 동적자산배분")
wts %>% fortify.zoo() %>%
gather(key, value, -Index) %>%
mutate(Index = as.Date(Index)) %>%
mutate(key = factor(key, levels = unique(key))) %>%
ggplot(aes(x = Index, y = value)) +
geom_area(aes(color = key, fill = key),
position = 'stack') +
xlab(NULL) + ylab(NULL) +  theme_bw() +
scale_x_date(date_breaks="years", date_labels="%Y",
expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
theme(plot.title = element_text(hjust = 0.5,
size = 12),
legend.position = 'bottom',
legend.title = element_blank(),
axis.text.x = element_text(angle = 45,
hjust = 1, size = 8),
panel.grid.minor.x = element_blank()) +
guides(color = guide_legend(byrow = TRUE))
GDAA$turnover = xts(
rowSums(abs(GDAA$BOP.Weight -
timeSeries::lag(GDAA$EOP.Weight)),
na.rm = TRUE),
order.by = index(GDAA$BOP.Weight))
chart.TimeSeries(GDAA$turnover)
fee = 0.0030
GDAA$net = GDAA$returns - GDAA$turnover*fee
cbind(GDAA$returns, GDAA$net) %>%
setNames(c('No Fee', 'After Fee')) %>%
charts.PerformanceSummary(main = 'GDAA')
######Tactical vs GDAA ---------
Tactical$turnover = xts(
rowSums(abs(Tactical$BOP.Weight -
timeSeries::lag(Tactical$EOP.Weight)),
na.rm = TRUE),
order.by = index(Tactical$BOP.Weight))
chart.TimeSeries(Tactical$turnover)
fee = 0.0030
Tactical$net = Tactical$returns - Tactical$turnover*fee
cbind(Tactical$returns, Tactical$net) %>%
setNames(c('No Fee', 'After Fee')) %>%
charts.PerformanceSummary(main = 'Tactical')
cbind(Tactical$net, GDAA$net) %>%
setNames(c('Tactical Fee', 'GDAA Fee')) %>%
charts.PerformanceSummary(main = ' Tactical vs GDAA')
## 성과분석
library(PerformanceAnalytics)
chart.CumReturns(Tactical$returns)
prod((1+Tactical$returns)) - 1 # 누적 수익률
mean(Tactical$returns) * 12 # 연율화 수익률(산술)
chart.CumReturns(Tactical$returns) # 수익률
# 연율화 수익률(기하)
(prod((1+Tactical$returns)))^(12 / nrow(Tactical$returns)) - 1
# 연율화 수익률(산술)
mean(Tactical$returns) * 252
# 연율화 수익률(기하)
(prod((1+Tactical$returns)))^(252 / nrow(Tactical$returns)) - 1
# 수익률
chart.CumReturns(Tactical$returns)
# 누적 수익률
prod((1+Tactical$returns)) - 1
# 각 함수
Return.cumulative(Tactical$returns)
# 누적 수익률
prod((1+Tactical$returns)) - 1
# 연율화 수익률(산술)
Return.annualized(Tactical$returns, geometric = F)
# 연율화 수익률(산술)
mean(Tactical$returns) * 252
# 연율화 수익률 기하
Return.annualized(Tactical$returns)
# 연율화 수익률(기하)
(prod((1+Tactical$returns)))^(252 / nrow(Tactical$returns)) - 1
# 연율화 변동성
sd(Tactical$returns) * sqrt(252)
# 연율화 변동성(함수)
StdDev.annualized(Tactical$returns)
Tactical$RF
df_RF
#### 낙폭과 최대낙폭
table.Drawdowns(Tactical$returns)
maxDrawdown(Tactical$returns)
chart.Drawdown(Tactical$returns)
CalmarRatio(Tactical$returns)
#### 연도 별 수익률
apply.yearly(Tactical$returns, Return.cumulative) %>% head()
library(lubridate)
library(tidyr)
library(ggplot2)
R.yr = apply.yearly(Tactical$returns, Return.cumulative) %>%
fortify.zoo() %>%
mutate(Index = year(Index)) %>%
gather(key, value, -Index) %>%
mutate(key = factor(key, levels = unique(key)))
ggplot(R.yr, aes(x = Index, y = value, fill = key)) +
geom_bar(position = "dodge", stat = "identity") +
ggtitle('Yearly Return') +
xlab(NULL) +
ylab(NULL) +
theme_bw() +
scale_y_continuous(expand = c(0.03, 0.03)) +
scale_x_continuous(breaks = R.yr$Index,
expand = c(0.01, 0.01)) +
theme(plot.title = element_text(hjust = 0.5,
size = 12),
legend.position = 'bottom',
legend.title = element_blank(),
legend.text = element_text(size=7),
axis.text.x = element_text(angle = 45,
hjust = 1, size = 8),
panel.grid.minor.x = element_blank() ) +
guides(fill = guide_legend(byrow = TRUE)) +
geom_text(aes(label = paste(round(value * 100, 2), "%"),
vjust = ifelse(value >= 0, -0.5, 1.5)),
position = position_dodge(width = 1),
size = 3)
####승률 및 롤링 윈도우 값
UpsideFrequency(df$QMJ, MAR = 0)
####승률 및 롤링 윈도우 값
# 승률: 포트폴리오가 벤치마크 대비 높은 성과를 기록한 기간 비율
# (포트폴리오>벤치마크) 일수 / 전체 기간
UpsideFrequency(Tactical$returns, MAR = 0)
roll_12 = Tactical$returns %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
UpsideFrequency()
roll_24 = Tactical$returns %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 24, Return.annualized) %>% na.omit() %>%
UpsideFrequency()
roll_36 = Tactical$returns %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 36, Return.annualized) %>% na.omit() %>%
UpsideFrequency()
roll_win = cbind(roll_12, roll_24, roll_36)
print(roll_win)
Tactical$returns %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes(x = Index, y = QMJ)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
Tactical$returns %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes(x = Index, y = returns)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
Tactical$returns %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes(x = Index, y = Tactical$returns)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
Tactical$returns %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes(x = Index, y = Tactical)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
Tactical$returns$ %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes(x = Index, y = portfolio.return)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
Tactical$returns$ %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes(x = Index, y = Tactical$returns$portfolio.returns)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
Tactical$returns$ %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes(x = Index, y = Tactical$returns)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
Tactical$returns$ %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes(x = Index, y = Tactical$returns)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
Tactical$returns$ %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes(x = Index, y = Tactical$returns)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
Tactical$returns$ %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes(x = Index, y = portfolio)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
Tactical$returns$ %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes(x = Index, y = portfolio)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
$returns
Tactical$returns %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes(x = Index, y = Tactical$returns)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
Tactical$returns
Tactical$returns %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes(x = Index, y = Tactical$returns)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
Tactical$returns %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes(x = Index, y = returns)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
Tactical$returns
print(roll_win)
roll_36
roll_24
roll_12
Tactical$returns %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes(x = Index, y = Tactical)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
Tactical
View(Tactical)
Tactical$returns %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes(x = Index, y = Tactical$returns)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
Tactical$returns %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
autoplot()
Tactical$returns %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
autoplot(.)
Tactical$returns %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
autoplot(., col = O("red")) + ggtitle("Tactical")
Tactical$returns %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
chart_Series(.)
Tactical$returns %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
chart_Series(.)
Tactical$returns %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes(x = Index, y = Tactical$returns)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
Tactical$returns %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() #%>%
Tactical$returns %>% apply.monthly(., Return.cumulative) %>%
rollapply(., 12, Return.annualized) %>% na.omit() %>%
fortify.zoo() %>%
ggplot(aes(x = Index, y = portfolio.returns)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = 'red') +
xlab(NULL) + ylab(NULL)
